package main

import (
	"context"
	"fmt"
	"log"
	"net/http"

	"golang.org/x/net/http2"
	"golang.org/x/net/http2/h2c"

	"connectrpc.com/connect"

	elizav1 "server-go/gen/connectrpc/eliza/v1"        // generated by protoc-gen-go
	"server-go/gen/connectrpc/eliza/v1/elizav1connect" // generated by protoc-gen-connect-go
)

type ElizaServer struct{}

func (s *ElizaServer) Say(
	ctx context.Context,
	req *connect.Request[elizav1.SayRequest],
) (*connect.Response[elizav1.SayResponse], error) {
	logger := log.Default()
	res := connect.NewResponse(&elizav1.SayResponse{
		Sentence: req.Msg.Sentence,
	})
	logger.Printf("Requested to say: %s", req.Msg.Sentence)

	return res, nil
}

func main() {
	logger := log.Default()

	greeter := &ElizaServer{}
	mux := http.NewServeMux()
	path, handler := elizav1connect.NewElizaServiceHandler(greeter)
	mux.Handle(path, handler)
	port := 4343
	logger.Printf("Server started on port %d", port)
	http.ListenAndServe(
		fmt.Sprintf("0.0.0.0:%d", port),
		// Use h2c so we can serve HTTP/2 without TLS.
		h2c.NewHandler(mux, &http2.Server{}),
	)
}
